name: CI/CD

on:
  push:
    branches:
    - '*'

jobs:
  deploy-staging:
    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: Deploy to Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo Downloading source code
            cd deploy
            mkdir ${{ github.sha }}
            cd ${{ github.sha }}
            git clone https://github.com/RolandoMalena/moneytrackr.git
            cd moneytrackr
            git switch ${{ github.ref_name }}

            echo Deploying web api
            sudo docker-compose -f docker-compose-staging.yml stop api
            sudo docker-compose -f docker-compose-staging.yml build api
            sudo docker-compose -f docker-compose-staging.yml up -d api

            echo Deploying web application
            sudo docker-compose -f docker-compose-staging.yml stop web
            sudo docker-compose -f docker-compose-staging.yml build web
            sudo docker-compose -f docker-compose-staging.yml up -d web

            echo Cleaning up
            cd ../../
            rm ${{ github.sha }} -R -f
            sudo docker container prune -f
            sudo docker image prune -f
  
  deploy-production:
    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/production' }}
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo Downloading source code
            cd deploy
            mkdir ${{ github.sha }}
            cd ${{ github.sha }}
            git clone https://github.com/RolandoMalena/moneytrackr.git
            cd moneytrackr
            git switch ${{ github.ref_name }}

            echo Deploying web api
            sudo docker-compose -f docker-compose-production.yml stop api
            sudo docker-compose -f docker-compose-production.yml build api
            sudo docker-compose -f docker-compose-production.yml up -d api

            echo Deploying web application
            sudo docker-compose -f docker-compose-production.yml stop web
            sudo docker-compose -f docker-compose-production.yml build web
            sudo docker-compose -f docker-compose-production.yml up -d web

            echo Cleaning up
            cd ../../
            rm ${{ github.sha }} -R -f
            sudo docker container prune -f
            sudo docker image prune -f