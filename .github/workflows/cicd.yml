name: CI/CD

on:
  push:
    branches:
    - '*'

jobs:
  deploy-api:
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/production' }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arrays: [{
          environment: "staging",
          port: 8081,
          db_host: "DB_STAGING_HOST",
          db_port: "DB_STAGING_PORT",
          db_password: "DB_STAGING_PASSWORD",
          shouldRun: "${{ github.ref == 'refs/heads/master' }}"
        }, {
          environment: "production",
          port: 8091,
          db_host: "DB_PRODUCTION_HOST",
          db_port: "DB_PRODUCTION_PORT",
          db_password: "DB_PRODUCTION_PASSWORD",
          shouldRun: "${{ github.ref == 'refs/heads/production' }}"
        }]
        exclude:
          - arrays: { shouldRun: false }
    steps:
      - name: Download source code
        uses: actions/checkout@v2

      - name: Build common container
        run: docker-compose -f docker-compose-${{ matrix.arrays.environment }}.yml build common
      
      - name: Build container
        run: docker-compose -f docker-compose-${{ matrix.arrays.environment }}.yml build api

      - name: Push container
        run: |
          docker login -u rolandomalena -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker push rolandomalena/moneytrackr:api-${{ matrix.arrays.environment }}

      - name: Run Migrations
        run: |
          cd MoneyTrackr/Apps/MoneyTrackr.Api
          dotnet tool install --global dotnet-ef
          dotnet ef database update
        env:
          Database__Username: admin
          Database__Password: ${{ secrets[matrix.arrays.db_password] }}
          Database__Host: ${{ secrets[matrix.arrays.db_host] }}
          Database__Port: ${{ secrets[matrix.arrays.db_port] }}
          Database__Database: db
      
      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker login -u rolandomalena -p '${{ secrets.DOCKERHUB_PASSWORD }}'

            echo Deploying API
            sudo docker rm moneytrackr-api-${{ matrix.arrays.environment }} -f
            sudo docker rmi rolandomalena/moneytrackr:api-${{ matrix.arrays.environment }} -f
            sudo docker pull rolandomalena/moneytrackr:api-${{ matrix.arrays.environment }}
            sudo docker run -d -p ${{ matrix.arrays.port }}:80 --restart unless-stopped -e Database__Username=admin -e Database__Password=${{ secrets[matrix.arrays.db_password] }} -e Database__Host=${{ secrets[matrix.arrays.db_host] }} -e Database__Port=${{ secrets[matrix.arrays.db_port] }} -e Database__Database=db --name moneytrackr-api-${{ matrix.arrays.environment }} rolandomalena/moneytrackr:api-${{ matrix.arrays.environment }}

            echo Cleaning up
            sudo docker container prune -f
            sudo docker image prune -f
  
  deploy-web:
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/production' }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arrays: [{
          environment: "staging",
          port: 8082,
          shouldRun: "${{ github.ref == 'refs/heads/master' }}"
        }, {
          environment: "production",
          port: 8092,
          shouldRun: "${{ github.ref == 'refs/heads/production' }}"
        }]
        exclude:
          - arrays: { shouldRun: false }
    steps:
      - name: Download source code
        uses: actions/checkout@v2

      - name: Build common container
        run: docker-compose -f docker-compose-${{ matrix.arrays.environment }}.yml build common
      
      - name: Build container
        run: docker-compose -f docker-compose-${{ matrix.arrays.environment }}.yml build web

      - name: Push container
        run: |
          docker login -u rolandomalena -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker push rolandomalena/moneytrackr:web-${{ matrix.arrays.environment }}

      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker login -u rolandomalena -p '${{ secrets.DOCKERHUB_PASSWORD }}'

            echo Deploying
            sudo docker rm moneytrackr-web-${{ matrix.arrays.environment }} -f
            sudo docker rmi rolandomalena/moneytrackr:web-${{ matrix.arrays.environment }} -f
            sudo docker pull rolandomalena/moneytrackr:web-${{ matrix.arrays.environment }}
            sudo docker run -d -p ${{ matrix.arrays.port }}:80 --restart unless-stopped --name moneytrackr-web-${{ matrix.arrays.environment }} rolandomalena/moneytrackr:web-${{ matrix.arrays.environment }}

            echo Cleaning up
            sudo docker container prune -f
            sudo docker image prune -f