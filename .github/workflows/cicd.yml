name: CI/CD

on:
  push:
    branches:
    - '*'

jobs:
  deploy:
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/production' }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arrays: [{
          name: "API - Staging",
          app: "api",
          environment: "staging",
          port: 8081,
          db_host: ${{ secrets.DB_STAGING_HOST }},
          db_port: "${{ secrets.DB_STAGING_PORT }}",
          db_password: "${{ secrets.DB_STAGING_PASSWORD }}",
          shouldRun: "${{ github.ref == 'refs/heads/master' }}"
        }, {
          name: "Web App - Staging",
          app: "web",
          environment: "staging",
          port: 8082,
          shouldRun: "${{ github.ref == 'refs/heads/master' }}"
        }, {
          name: "API - Production",
          app: "api",
          environment: "production",
          port: 8091,
          db_host: "${{ secrets.DB_PRODUCTION_HOST }}",
          db_port: "${{ secrets.DB_PRODUCTION_PORT }}",
          db_password: "${{ secrets.DB_PRODUCTION_PASSWORD }}",
          shouldRun: "${{ github.ref == 'refs/heads/production' }}"
        }, {
          name: "Web App - Production",
          app: "web",
          environment: "production",
          port: 8092,
          shouldRun: "${{ github.ref == 'refs/heads/production' }}"
        }]
        exclude:
          - arrays: { shouldRun: false }
    steps:
      - name: Download source code
        uses: actions/checkout@v2

      - name: Build common container
        run: docker-compose -f docker-compose-${{ matrix.arrays.environment }}.yml build common
      
      - name: Build container
        run: docker-compose -f docker-compose-${{ matrix.arrays.environment }}.yml build ${{ matrix.arrays.app }}

      - name: Push container
        run: |
          docker login -u rolandomalena -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker push rolandomalena/moneytrackr:${{ matrix.arrays.app }}-${{ matrix.arrays.environment }}

      - name: Run Migrations
        if: ${{ matrix.arrays.app == 'api' }}
        run: |
          cd MoneyTrackr/Apps/MoneyTrackr.Api
          dotnet ef database update
        env:
          Database__Username: admin
          Database__Password: ${{ matrix.arrays.db_password }}
          Database__Host: ${{ matrix.arrays.db_host }}
          Database__Port: ${{ matrix.arrays.db_port }}
          Database__Database: db
      
      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker login -u rolandomalena -p '${{ secrets.DOCKERHUB_PASSWORD }}'

            echo Deploying
            sudo docker rm moneytrackr-${{ matrix.arrays.app }}-${{ matrix.arrays.environment }} -f
            sudo docker rmi rolandomalena/moneytrackr:${{ matrix.arrays.app }}-${{ matrix.arrays.environment }} -f
            sudo docker pull rolandomalena/moneytrackr:${{ matrix.arrays.app }}-${{ matrix.arrays.environment }}
            sudo docker run -d -p ${{ matrix.arrays.port }}:80 --restart unless-stopped --name moneytrackr-${{ matrix.arrays.app }}-${{ matrix.arrays.environment }} rolandomalena/moneytrackr:${{ matrix.arrays.app }}-${{ matrix.arrays.environment }}

            echo Cleaning up
            sudo docker container prune -f
            sudo docker image prune -f