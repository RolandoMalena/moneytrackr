name: CI/CD

on:
  push:
    branches:
    - '*'

jobs:
  deploy:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arrays: [{
          name: "Deploy API to Staging",
          environment: "staging",
          port: 8081,
          shouldRun: "${{ github.ref == 'refs/heads/master' }}"
        }, {
          name: "Deploy Web App to Staging",
          environment: "staging",
          port: 8082,
          shouldRun: "${{ github.ref == 'refs/heads/master' }}"
        }, {
          name: "Deploy API to Production",
          environment: "production",
          port: 8091,
          shouldRun: "${{ github.ref == 'refs/heads/production' }}"
        }, {
          name: "Deploy API to Production",
          environment: "production",
          port: 8092,
          shouldRun: "${{ github.ref == 'refs/heads/production' }}"
        }]
      steps:
        - name: Print Variables
          run: |
          echo "${{ matrix.arrays.name }}"
          echo "${{ matrix.arrays.environment }}"
          echo "${{ matrix.arrays.port }}"
          echo "${{ matrix.arrays.shouldRun }}"

  deploy-staging:
    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: Download source code
        uses: actions/checkout@v2

      - name: Build common container
        run: docker-compose -f docker-compose-staging.yml build common
      
      - name: Build API container
        run: docker-compose -f docker-compose-staging.yml build api
      
      - name: Build Web container
        run: docker-compose -f docker-compose-staging.yml build web

      - name: Push containers
        run: |
          docker login -u rolandomalena -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker push rolandomalena/moneytrackr:api-staging
          docker push rolandomalena/moneytrackr:web-staging

      - name: Deploy to Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker login -u rolandomalena -p '${{ secrets.DOCKERHUB_PASSWORD }}'

            echo Deploying API
            sudo docker rm moneytrackr-api-staging -f
            sudo docker rmi rolandomalena/moneytrackr:api-staging -f
            sudo docker pull rolandomalena/moneytrackr:api-staging
            sudo docker run -d -p 8081:80 --restart unless-stopped --name moneytrackr-api-staging rolandomalena/moneytrackr:api-staging

            echo Deploying Web App
            sudo docker rm moneytrackr-web-staging -f
            sudo docker rmi rolandomalena/moneytrackr:web-staging -f
            sudo docker pull rolandomalena/moneytrackr:web-staging
            sudo docker run -d -p 8082:80 --restart unless-stopped --name moneytrackr-web-staging rolandomalena/moneytrackr:web-staging

            echo Cleaning up
            sudo docker container prune -f
            sudo docker image prune -f
  
  deploy-production:
    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/production' }}
    steps:
      - name: Download source code
        uses: actions/checkout@v2

      - name: Prepare common container
        run: docker-compose -f docker-compose-production.yml build common
      
      - name: Build API container
        run: docker-compose -f docker-compose-production.yml build api
      
      - name: Build Web container
        run: docker-compose -f docker-compose-production.yml build web

      - name: Push containers
        run: |
          docker login -u rolandomalena -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker push rolandomalena/moneytrackr:api-production
          docker push rolandomalena/moneytrackr:web-production

      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker login -u rolandomalena -p '${{ secrets.DOCKERHUB_PASSWORD }}'

            echo Deploying API
            sudo docker rm moneytrackr-api-production -f
            sudo docker rmi rolandomalena/moneytrackr:api-production -f
            sudo docker pull rolandomalena/moneytrackr:api-production
            sudo docker run -d -p 8091:80 --restart unless-stopped --name moneytrackr-api-production rolandomalena/moneytrackr:api-production

            echo Deploying Web App
            sudo docker rm moneytrackr-web-production -f
            sudo docker rmi rolandomalena/moneytrackr:web-production -f
            sudo docker pull rolandomalena/moneytrackr:web-production
            sudo docker run -d -p 8092:80 --restart unless-stopped --name moneytrackr-web-production rolandomalena/moneytrackr:web-production

            echo Cleaning up
            sudo docker container prune -f
            sudo docker image prune -f