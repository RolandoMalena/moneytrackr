@using System.Security.Claims
@using MoneyTrackr.ViewModels

@model FilterEntriesViewModel

@{
    string currentUsername = User.FindFirst(ClaimTypes.NameIdentifier).Value;
    bool allowUserSelection = User.FindFirst(ClaimTypes.Role).Value == Constants.Role.RegularUserRoleName;

    Model.Users.Add(new UserViewModel()
    {
        Username = currentUsername
    });
}

<form id="searchForm" onsubmit="return entries.getEntries(this)" class="form-inline">
    <div class="input-group input-group-sm" style="@(allowUserSelection ? "display:none;" : "")">
        <div class="input-group-prepend">
            <span class="input-group-text">
                @Html.LabelFor(model => model.Users, htmlAttributes: new { @class = "control-label" })
            </span>
        </div>

        @Html.DropDownListFor(model => model.Users, new SelectList(Model.Users, "Username", "Username", currentUsername), null, new { @class = "form-control" })
    </div>

    <div class="input-group input-group-sm">
        <div class="input-group-prepend">
            <span class="input-group-text">
                @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label" })
            </span>
        </div>

        @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control", value = DateTime.Today.ToString("yyyy/MM/dd") } })
    </div>

    <div class="input-group input-group-sm">
        <div class="input-group-prepend">
            <span class="input-group-text">
                @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label" })
            </span>
        </div>
        @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control", value = System.DateTime.Now } })
    </div>

    <button class="btn btn-light btn-sm" type="submit">
        <span class="icon icons-search"></span>
    </button>
</form>

<div id="filterValidation" class="text-danger text-right"></div>