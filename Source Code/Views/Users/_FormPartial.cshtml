@model MoneyTrackr.ViewModels.UserViewModel

<form onsubmit="return users.saveUser(this)">
    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", autocomplete="new-password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.DropDownListFor(model => model.RoleId, new SelectList(Model.Roles, "Id", "Name", MoneyTrackr.Constants.Role.RegularUserRoleId), null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div id="summaryErrors" class="text-danger"></div>
    @Html.HiddenFor(model => model.Id)
</form>
